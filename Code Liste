
# This is a comment
print("this is a comment") #This is also a comment 

""" This is a multi-line comment
    you can write as much as you want
    and it will be ignored by the interpreter
    as long as you keep it within the triple quotes"""


x = int(input("Tell me your favorite number:"))

if x > 2: print("your number is greater than two")
else: print("your number is not greater than two")



name = "raji"

if name.startswith("Ra"):
    print("Hello Raji")
else: print("Hello someone else")


name = ""
if name:
    print("sring is here")
else: print("string is not here")

# Wird das hier ausgeführt? Erkennt pyhton das es ein String ist?
## Ja, Python erkennt das als String, auch wenn er leer ist. In Python wird ein leerer String als False bewertet, während ein nicht-leerer String als True bewertet wird. Daher wird in diesem Fall die else-Anweisung ausgeführt und "string is not here" wird ausgegeben.



name = input ("What is your name?")

if name:
    print(f"the Name is given: (Raji)")

else:
    print("The name was not given")
            
#f = Format wobei die Klammern als Variable erkannt wird also 



# 08.10.2025 We learn While and for
## while loop: We can repeat a condition while a condition is true


name = ""

while name == "":
    name = input ("What is your name?")

    if name:
        print(f"the Name is given: (Raji)")

    else:
        print("The name was not given")

# mit f drinnen erkennt python das es ein String ist. Heisst es wird in der Klammer der Input eingegeben. Anonsten wäre es false. ABER man kann auch While not name:

#Jz möchten wir das sich das ganze 5 mal wiederholt. Heisst wenn der user 5 mal nichts eingibt, soll die Konsole stoppen

name = ""
count = 0 
while name == "":
    count += 1
    if count > 5:
        exit()
    name = input ("What is your name?")
    
    if name:
        print(f"the Name is given: (Raji)")
    else:
        print("The name was not given")



# if a number becomes to small in 64 Bits it starts again at the very highest number

count = 0
while count < 5 :
    print(count)
    count += 1



for number in [1, 2, 3, 4, 5]:
    print(number)
print(f"The value of the variable after the loop is: {number}")

# Das hier wird 1,2,3,4,5 ausgegeben und danach die 5. Weil die Variable number nach der Schleife den letzten Wert annimmt.

#-------------------------------------------------------------------------------------

for number in range(5):
    print(number)

#Range ist von 0 bis x -> Und zb wenn man range(5) macht, dann zählt er von 0 bis 4 (5 nicht mitgezählt)
#Range starts always at 0

#-------------------------------------------------------------------------------------


for name in ["Raji", "Anna", "John"]:
    print(f"The last name is", {name})



#-------------------------------------------------------------------------------------
import time

for sec in range(10, 0, -1):
    print(sec)
    time.sleep(1)

# Zählt von 10 bis 1 runter. Der dritte Parameter ist die Schrittweite. Also -1 bedeutet, dass er um 1 runterzählt.


#-------------------------------------------------------------------------------------

#Someone orders beverage, food at a restaurant. WE want to create a list 

prices = [11.20,35.40,14.20]

#die summe der Preise 

#Option 1
total = 0
for price in prices:
    total += price
print(f"The total price is: {total}")

#Option 2
total=sum(prices)

print(f"The total price is: {total}")


#-------------------------------------------------------------------------------------

#
